{"ast":null,"code":"var _jsxFileName = \"E:\\\\QUIZ_APP\\\\frontend\\\\src\\\\Context\\\\AppContext.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\nexport const AppContextProvider = props => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [useData, setUserData] = useState(false);\n  const getUserData = async () => {\n    try {\n      const {\n        data\n      } = await axios.post('http://localhost:7000/getDetails', {}, {\n        withCredentials: true\n      });\n      if (data.success) {} else {}\n    } catch (error) {\n      toast.error(error.message);\n    }\n  };\n  const value = {\n    isLoggedIn,\n    setIsLoggedIn\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: value,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(AppContextProvider, \"EWPaouxg/qgU8IiG/EZbSrylU+k=\");\n_c = AppContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AppContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","toast","jsxDEV","_jsxDEV","AppContext","AppContextProvider","props","_s","isLoggedIn","setIsLoggedIn","useData","setUserData","getUserData","data","post","withCredentials","success","error","message","value","Provider","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/QUIZ_APP/frontend/src/Context/AppContext.js"],"sourcesContent":["import React from 'react'\r\nimport { createContext,useState,useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nexport const AppContext = createContext();\r\nexport const AppContextProvider = (props) => {\r\n    const [isLoggedIn,setIsLoggedIn] = useState(false);\r\n    const [useData,setUserData] = useState(false);\r\n    const getUserData = async() => {\r\n        try{\r\n            const {data} = await axios.post('http://localhost:7000/getDetails',{},{withCredentials:true});\r\n            if(data.success){\r\n\r\n            } \r\n            else{\r\n                \r\n            }\r\n        }\r\n        catch(error){\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n    const value={\r\n        isLoggedIn,setIsLoggedIn\r\n    }\r\n  return (\r\n    <AppContext.Provider value={value}>\r\n        {props.children}\r\n    </AppContext.Provider>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAACC,QAAQ,EAACC,SAAS,QAAQ,OAAO;AACxD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACvC,OAAO,MAAMC,UAAU,gBAAGP,aAAa,CAAC,CAAC;AACzC,OAAO,MAAMQ,kBAAkB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,UAAU,EAACC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAClD,MAAM,CAACY,OAAO,EAACC,WAAW,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMc,WAAW,GAAG,MAAAA,CAAA,KAAW;IAC3B,IAAG;MACC,MAAM;QAACC;MAAI,CAAC,GAAG,MAAMb,KAAK,CAACc,IAAI,CAAC,kCAAkC,EAAC,CAAC,CAAC,EAAC;QAACC,eAAe,EAAC;MAAI,CAAC,CAAC;MAC7F,IAAGF,IAAI,CAACG,OAAO,EAAC,CAEhB,CAAC,MACG,CAEJ;IACJ,CAAC,CACD,OAAMC,KAAK,EAAC;MACRhB,KAAK,CAACgB,KAAK,CAACA,KAAK,CAACC,OAAO,CAAC;IAC9B;EACJ,CAAC;EACD,MAAMC,KAAK,GAAC;IACRX,UAAU;IAACC;EACf,CAAC;EACH,oBACEN,OAAA,CAACC,UAAU,CAACgB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAE,QAAA,EAC7Bf,KAAK,CAACe;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAE1B,CAAC;AAAAlB,EAAA,CAzBYF,kBAAkB;AAAAqB,EAAA,GAAlBrB,kBAAkB;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"E:\\\\QUIZ_APP\\\\frontend\\\\src\\\\Components\\\\QuizComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../Styles/';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QuizComponent = () => {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedOption, setSelectedOption] = useState('');\n  const [score, setScore] = useState(0);\n  const [quizCompleted, setQuizCompleted] = useState(false);\n  const questions = [{\n    question: 'What is the capital of France?',\n    options: ['Berlin', 'Madrid', 'Paris', 'Rome'],\n    correctAnswer: 'Paris'\n  }, {\n    question: 'Who is known as the father of computers?',\n    options: ['Charles Babbage', 'Alan Turing', 'Bill Gates', 'Steve Jobs'],\n    correctAnswer: 'Charles Babbage'\n  }, {\n    question: 'Which planet is known as the Red Planet?',\n    options: ['Earth', 'Mars', 'Jupiter', 'Saturn'],\n    correctAnswer: 'Mars'\n  }];\n  const handleOptionChange = option => {\n    setSelectedOption(option);\n  };\n  const handleSubmit = () => {\n    if (selectedOption === questions[currentQuestion].correctAnswer) {\n      setScore(score + 1);\n    }\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n      setSelectedOption('');\n    } else {\n      setQuizCompleted(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Quiz Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Question \", currentQuestion + 1, \" of \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), !quizCompleted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-question\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: questions[currentQuestion].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-options\",\n        children: questions[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleOptionChange(option),\n          className: `quiz-option ${selectedOption === option ? 'selected' : ''}`,\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          className: \"quiz-submit\",\n          children: currentQuestion < questions.length - 1 ? 'Next Question' : 'Finish Quiz'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Quiz Completed!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your Score: \", score, \" / \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        className: \"quiz-restart\",\n        children: \"Restart Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizComponent, \"03Ns0MnZ/quIPYYkaqnJh2pJOsU=\");\n_c = QuizComponent;\nexport default QuizComponent;\nvar _c;\n$RefreshReg$(_c, \"QuizComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","QuizComponent","_s","currentQuestion","setCurrentQuestion","selectedOption","setSelectedOption","score","setScore","quizCompleted","setQuizCompleted","questions","question","options","correctAnswer","handleOptionChange","option","handleSubmit","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","window","location","reload","_c","$RefreshReg$"],"sources":["E:/QUIZ_APP/frontend/src/Components/QuizComponent.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../Styles/';\r\n\r\nconst QuizComponent = () => {\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [selectedOption, setSelectedOption] = useState('');\r\n  const [score, setScore] = useState(0);\r\n  const [quizCompleted, setQuizCompleted] = useState(false);\r\n\r\n  const questions = [\r\n    {\r\n      question: 'What is the capital of France?',\r\n      options: ['Berlin', 'Madrid', 'Paris', 'Rome'],\r\n      correctAnswer: 'Paris'\r\n    },\r\n    {\r\n      question: 'Who is known as the father of computers?',\r\n      options: ['Charles Babbage', 'Alan Turing', 'Bill Gates', 'Steve Jobs'],\r\n      correctAnswer: 'Charles Babbage'\r\n    },\r\n    {\r\n      question: 'Which planet is known as the Red Planet?',\r\n      options: ['Earth', 'Mars', 'Jupiter', 'Saturn'],\r\n      correctAnswer: 'Mars'\r\n    }\r\n  ];\r\n\r\n  const handleOptionChange = (option) => {\r\n    setSelectedOption(option);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (selectedOption === questions[currentQuestion].correctAnswer) {\r\n      setScore(score + 1);\r\n    }\r\n\r\n    if (currentQuestion < questions.length - 1) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n      setSelectedOption('');\r\n    } else {\r\n      setQuizCompleted(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"quiz-container\">\r\n      <div className=\"quiz-header\">\r\n        <h2>Quiz Time</h2>\r\n        <p>Question {currentQuestion + 1} of {questions.length}</p>\r\n      </div>\r\n\r\n      {!quizCompleted ? (\r\n        <>\r\n          <div className=\"quiz-question\">\r\n            <h3>{questions[currentQuestion].question}</h3>\r\n          </div>\r\n\r\n          <div className=\"quiz-options\">\r\n            {questions[currentQuestion].options.map((option, index) => (\r\n              <button\r\n                key={index}\r\n                onClick={() => handleOptionChange(option)}\r\n                className={`quiz-option ${selectedOption === option ? 'selected' : ''}`}\r\n              >\r\n                {option}\r\n              </button>\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"quiz-footer\">\r\n            <button onClick={handleSubmit} className=\"quiz-submit\">\r\n              {currentQuestion < questions.length - 1 ? 'Next Question' : 'Finish Quiz'}\r\n            </button>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <div className=\"quiz-results\">\r\n          <h3>Quiz Completed!</h3>\r\n          <p>Your Score: {score} / {questions.length}</p>\r\n          <button onClick={() => window.location.reload()} className=\"quiz-restart\">\r\n            Restart Quiz\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}